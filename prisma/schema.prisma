generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chef {
  id          String  @id @default(cuid())
  bio         String? @db.VarChar(800)
  bioBrief    String?
  avatarUrl   String?
  coverUrl    String?
  phoneNumber String?
  nation      String?
  slug        String?
  city        String?

  createdAt DateTime @default(now())

  Menus  Menu[]
  Photos Photo[]
  Dishes Dish[]
  Facts  Facts[]
  Review Review[]

  user User   @relation(fields: [id], references: [id], onDelete: Cascade)
  Chat Chat[]
}

model User {
  id        String   @id @default(cuid())
  firstname String
  lastname  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  chef   Chef?
  Review Review[]
  Chat   Chat[]
}

model Menu {
  id         String   @id @default(cuid())
  chefId     String
  name       String
  maxPeople  Int?
  price      Int?
  created_at DateTime @default(now())
  Dishes     Dish[]

  chef Chef @relation(fields: [chefId], references: [id], onDelete: Cascade)

  @@index([chefId])
}

model Facts {
  id         String   @id @default(cuid())
  short      String
  long       String
  chefId     String
  created_at DateTime @default(now())

  chef Chef @relation(fields: [chefId], references: [id], onDelete: Cascade)

  @@index([chefId])
}

model Photo {
  id         String   @id @default(cuid())
  filename   String
  path       String
  size       Int
  width      Int?
  height     Int?
  mimeType   String
  imageUrl   String
  chefId     String
  created_at DateTime @default(now())

  chef Chef @relation(fields: [chefId], references: [id], onDelete: Cascade)

  @@index([chefId])
}

model Dish {
  id         String   @id @default(cuid())
  listOrder  Int?
  name       String
  course     String
  chefId     String
  created_at DateTime @default(now())
  Menus      Menu[]

  categories Category[]

  chef Chef @relation(fields: [chefId], references: [id], onDelete: Cascade)

  @@index([chefId])
}

model Category {
  id         String   @id @default(cuid())
  name       String
  created_at DateTime @default(now())

  Dishes Dish[]
}

model Chat {
  id        String   @id @default(cuid())
  chefId    String
  userId    String
  createdAt DateTime @default(now())

  chef     Chef      @relation(fields: [chefId], references: [id])
  user     User      @relation(fields: [userId], references: [id])
  Messages Message[]

  @@index([chefId])
}

model Message {
  id        String   @id @default(cuid())
  chatId    String
  isChef    Boolean
  text      String
  isRed     Boolean
  createdAt DateTime @default(now())

  Chat Chat @relation(fields: [chatId], references: [id])
}

model Review {
  id        String   @id @default(cuid())
  chefId    String
  userId    String
  rating    Int
  text      String   @db.VarChar(800)
  createdAt DateTime @default(now())

  chef Chef @relation(fields: [chefId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@index([chefId])
}
